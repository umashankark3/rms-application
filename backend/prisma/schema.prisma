// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserRole {
  admin
  recruiter
}

enum ResumeStatus {
  new
  reviewing
  assigned
  shortlisted
  rejected
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(50)
  fullName     String?  @db.VarChar(120)
  phone        String?  @db.VarChar(20)
  role         UserRole @default(recruiter)
  passwordHash String   @db.VarChar(255)
  createdAt    DateTime @default(now())

  // Relations
  uploadedResumes Resume[] @relation("UploadedBy")
  assignedResumes Resume[] @relation("AssignedTo")
  shareLinks      ShareLink[]

  @@map("users")
}

model Resume {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  email       String        @db.VarChar(255)
  phone       String?       @db.VarChar(20)
  skills      Json?
  experience  String?       @db.Text
  status      ResumeStatus  @default(new)
  fileKey     String        @db.VarChar(255)
  fileName    String        @db.VarChar(255)
  fileSize    Int
  uploadedBy  Int
  assignedTo  Int?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt

  // Relations
  uploadedByUser User @relation("UploadedBy", fields: [uploadedBy], references: [id])
  assignedToUser User? @relation("AssignedTo", fields: [assignedTo], references: [id])
  shareLinks     ShareLink[]

  @@map("resumes")
}

model ShareLink {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(255)
  resumeId  Int
  createdBy Int
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  resume      Resume @relation(fields: [resumeId], references: [id])
  createdByUser User @relation(fields: [createdBy], references: [id])

  @@map("shareLinks")
}