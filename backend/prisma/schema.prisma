// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserRole {
  admin
  recruiter
}

enum ResumeStatus {
  new
  reviewing
  assigned
  shortlisted
  rejected
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(50)
  fullName     String?  @db.VarChar(120)
  phone        String?  @db.VarChar(20)
  role         UserRole @default(recruiter)
  passwordHash String   @db.VarChar(255)
  createdAt    DateTime @default(now())

  // Relations
  uploadedResumes Resume[] @relation("UploadedBy")
  assignedResumes Resume[] @relation("AssignedTo")
  shareLinks      ShareLink[]

  @@map("users")
}

model Resume {
  id              Int           @id @default(autoincrement())
  candidateName   String        @db.VarChar(140)
  candidateEmail  String?       @db.VarChar(140)
  candidatePhone  String?       @db.VarChar(20)
  experienceYears Decimal?      @db.Decimal(3, 1)
  skills          String?       @db.Text
  notes           String?       @db.Text
  fileKey         String        @db.VarChar(255)
  fileName        String        @db.VarChar(255)
  fileSize        Int?
  mimeType        String?       @db.VarChar(120)
  status          ResumeStatus  @default(new)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Foreign Keys
  uploadedByUserId  Int
  assignedToUserId  Int?

  // Relations
  uploadedBy User @relation("UploadedBy", fields: [uploadedByUserId], references: [id])
  assignedTo User? @relation("AssignedTo", fields: [assignedToUserId], references: [id])
  shareLinks ShareLink[]

  @@map("resumes")
}

model ShareLink {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.Char(32)
  expiresAt DateTime?
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())

  // Foreign Keys
  resumeId        Int
  createdByUserId Int

  // Relations
  resume    Resume @relation(fields: [resumeId], references: [id])
  createdBy User   @relation(fields: [createdByUserId], references: [id])

  @@map("share_links")
}